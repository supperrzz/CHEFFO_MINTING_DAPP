{"version":3,"sources":["connect.js","components/mintCard.js","App.js","reportWebVitals.js","index.js"],"names":["Connect","userState","connect","class","alt","src","onClick","e","preventDefault","MintCard","SmartContract","img","useState","feedback","setFeedback","setMintingNft","blockchain","setBlockchain","smartContractData","setSmartContractData","mintAmount","setMintAmount","useEffect","a","fetching","smartContract","methods","name","call","maxSupply","cost","totalSupply","maxMintAmount","symbol","paused","errorMsg","message","fetchData","window","ethereum","isMetaMask","Web3EthContract","setProvider","web3","Web3","request","method","accounts","networkId","abi","address","network","networkName","Number","SmartContractObj","account","on","prev","location","reload","newMintAmount","decrementMintAmount","mint","send","from","value","utils","toWei","toString","once","err","console","log","code","then","receipt","claimNFTs","incrementMintAmount","App","setUserState","length","href","id","className","SmartContract2","SmartContract3","SmartContract4","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e2282c6.chunk.js","sourcesContent":["export const Connect = ({ userState, connect }) => {\n\n  return (\n    <div class=\"connect\">\n      <div class=\"section connect\">\n      <img alt=\"Cookie box\" src=\"https://images.squarespace-cdn.com/content/v1/617ce6e6e7be6e72e51086cc/b926389b-1ea7-4b14-a935-0908171b104f/cookie+box+logo-+2.png?format=2500w\"/>\n        <button\n          onClick={(e) => {\n            e.preventDefault();\n            connect();\n          }}\n        >\n          CONNECT YOUR WALLET\n        </button>\n      </div>\n    </div>\n  )\n}","import React, { useEffect, useState } from \"react\";\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n\nexport const MintCard = ({SmartContract, img}) => {\n  const [feedback, setFeedback] = useState(`2 MATIC`);\n  const [mintingNft, setMintingNft] = useState(false);\n  const [blockchain, setBlockchain] = useState({});\n  const [smartContractData, setSmartContractData] = useState({});\n  const [mintAmount, setMintAmount] = useState(1);\n\n  useEffect(() => {\n    connect();\n  }, []);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setSmartContractData({fetching: true});\n      try {\n        let name = await blockchain.smartContract.methods.name()\n          .call();\n        let maxSupply = await blockchain.smartContract.methods.maxSupply()\n          .call();\n        let cost = await blockchain.smartContract.methods.cost()\n          .call();\n        let totalSupply = await blockchain.smartContract.methods.totalSupply()\n          .call();\n        let maxMintAmount = await blockchain.smartContract.methods.maxMintAmount()\n          .call();\n        let symbol = await blockchain.smartContract.methods.symbol()\n          .call();\n        let paused = await blockchain.smartContract.methods.paused()\n          .call();\n        setSmartContractData({\n          name,\n          totalSupply,\n          cost,\n          maxSupply,\n          maxMintAmount,\n          symbol,\n          paused,\n        })\n      } catch (err) {\n        setSmartContractData({ errorMsg: err.message});\n      }\n    };\n    fetchData();\n    setFeedback(`2 MATIC`);\n  }, [blockchain]);\n  \n  const connect = async () => {\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        \n        const { \n          abi, \n          address, \n          network, \n          networkName \n        } = SmartContract\n        \n        // If on the correct chain\n        if (Number(networkId) === network) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            address\n            );\n            \n            // Set blockchain state\n            setBlockchain({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3\n            })\n            \n            // Metamask account changes\n            ethereum.on(\"accountsChanged\", (accounts) => {\n              setFeedback(`2 MATIC`);\n              setBlockchain(prev => ({\n                ...prev,\n                account: accounts[0],\n              })\n              )\n            });\n          } else {\n            // On the wrong network\n            setBlockchain({\n              errorMsg: `Change network to ${networkName}`\n            })\n          };\n          // User changes Metamask chain\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n        } catch (err) {\n          setBlockchain({\n            errorMsg: err\n          });\n        }\n      } else {\n        setBlockchain({\n          errorMsg: \"Install Metamask\"\n        });\n      }\n  };\n    \n    const claimNFTs = (mintAmount) => {\n      setFeedback(`Minting your ${SmartContract.name}...`);\n      setMintingNft(true);\n      blockchain.smartContract.methods\n    .mint(mintAmount)\n    .send({\n      // gasLimit: \"285000\",\n      from: blockchain.account,\n      value: blockchain.web3.utils.toWei((smartContractData.cost * mintAmount).toString(), \"ether\"),\n    })\n    .once(\"error\", (err) => {\n      console.log(err);\n      err.code === 4001 ? setFeedback(`2 MATIC`) : setFeedback(`Something went wrong.`);\n      setMintingNft(false);\n    })\n    .then((receipt) => {\n      setFeedback(`Minting complete!`);\n      setMintingNft(false);\n    });\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > smartContractData.maxMintAmount) {\n      newMintAmount = smartContractData.maxMintAmount;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  return (\n    <div class=\"mint-card\">\n      <h3>{`Amount Minted: ${smartContractData.totalSupply}/${smartContractData.maxSupply}`}</h3>\n      <img src={img} alt=\"Placeholder\"/>\n      <h3 class=\"feedback\">{feedback}</h3>\n      <div class=\"mint-selector\">\n        <span\n          onClick={(e) => {\n            e.preventDefault();\n            decrementMintAmount();\n          }}\n        >\n          <h2 class=\"mint-amount-btn\">-</h2>\n        </span>\n        <button\n          onClick={(e) => {\n            e.preventDefault();\n            claimNFTs(mintAmount);\n          }}\n        >\n         MINT NOW<br/><span class=\"mint-amount\">{`[${mintAmount}]`}</span>\n        </button>\n        <span\n          onClick={(e) => {\n            e.preventDefault();\n            incrementMintAmount();\n          }}\n        >\n          <h2 class=\"mint-amount-btn\">+</h2>\n        </span>\n      </div>\n      <h4 class=\"max-mint\">{`LIMIT ${smartContractData.maxMintAmount}`}</h4>\n    </div>\n  )\n}","import { React, useState, useEffect } from \"react\";\nimport { Connect } from \"./connect\";\nimport { MintCard } from \"./components/mintCard\"\nimport { FAQ } from \"./components/accordion\"\nimport SmartContract from \"./assets/Gingerbread_Rockets.json\";\nimport SmartContract2 from \"./assets/Milky_Way_Moons.json\";\nimport SmartContract3 from \"./assets/Mexican_Wedding_Rock.json\";\nimport SmartContract4 from \"./assets/Space_Dust_Ufos.json\";\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n\nfunction App() {\n  const [blockchain, setBlockchain] = useState({});\n  const [userState, setUserState] = useState('NOT_CONNECTED');\n  \n  // useEffect(() => {\n  //   connect();\n  // }, []);\n\n  const connect = async () => {\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n  \n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        \n        const { \n          address, \n          network, \n          networkName \n        } = SmartContract\n        \n        // If on the correct chain\n        if (Number(networkId) === network) {\n          setUserState('CONNECTED');\n\n          // Metamask account changes\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            if (accounts.length > 0)\n              setBlockchain(prev => ({\n                ...prev,\n                account: accounts[0],\n              })\n              )\n            else\n              setUserState('DISCONNECTED')\n          });\n\n        } else {\n          // On the wrong network\n          setUserState('WRONG_NETWORK')\n        };\n  \n          // User changes Metamask chain\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n        } catch (err) {\n          console.log(err)\n          setUserState('SYSTEM_ERROR');\n        }\n    } else {\n      setUserState('NOT_CONNECTED');\n    }\n  };\n\n  const appContent = () => {\n    if (userState !== 'CONNECTED') {\n      return <Connect userState={userState} connect={connect} />\n    } else {\n      return (\n        <>\n          <div class=\"section hero\">\n          <img alt=\"Cookie box\" src=\"https://images.squarespace-cdn.com/content/v1/617ce6e6e7be6e72e51086cc/b926389b-1ea7-4b14-a935-0908171b104f/cookie+box+logo-+2.png?format=2500w\"/>\n          </div>\n          <div id=\"mint\" class=\"section mint\">\n            <h2>Select a Cookie</h2>\n            <h4>Launch 12/21  |  Quantity 4321 Each  |  5 second Gifs  |  IPFS hosted  |  ERC721  |  2 MATIC Each | Discord = Recipe </h4>\n            <div className=\"grid\">\n              <MintCard SmartContract={SmartContract} img=\"https://images.squarespace-cdn.com/content/v1/617ce6e6e7be6e72e51086cc/1639905570476-A61K7SCHIUSPT5K1W7MW/Gingerbread-Rocket.png\"/>\n              <MintCard SmartContract={SmartContract2} img=\"https://images.squarespace-cdn.com/content/v1/617ce6e6e7be6e72e51086cc/1639905570950-ODPAHADURHWJFEVE0OZS/Milky-Way-Moons.png\"/>\n              <MintCard SmartContract={SmartContract3} img=\"https://images.squarespace-cdn.com/content/v1/617ce6e6e7be6e72e51086cc/1639905572332-GPDY8XN0F5JTQQYDPYWP/Mexican-Wedding-Rock.png\"/>\n              <MintCard SmartContract={SmartContract4} img=\"https://images.squarespace-cdn.com/content/v1/617ce6e6e7be6e72e51086cc/1639905572169-EBOGMUMPCCWRVH7P6T7Q/Space-Dust-UFOs.png\"/>\n            </div>\n          </div>\n          {/* <div class=\"section faq\">\n            <h2>FAQ Section</h2>\n            <FAQ />\n          </div> */}\n        </>\n      )\n    }\n  }\n\n\n  return (\n    <>\n      <div class=\"app\">\n        <nav class=\"nav-bar\">\n          <a href=\"https://www.cheffo.io\">\n            <img src=\"//images.squarespace-cdn.com/content/v1/617ce6e6e7be6e72e51086cc/eba1e465-5a01-4493-8116-a255d434b9fa/CHEFFO+LOGO.png?format=1500w\" alt=\"CHEFFO\" class=\"logo\"/>\n          </a>\n          <ol>\n            <li class=\"link\"><a href=\"#\">COOKIE BOX</a></li>\n            <li class=\"link\"><a href=\"#\">V1</a></li>\n            <li class=\"link\"><a href=\"#\">RESTAURANT</a></li>\n            <li class=\"link\"><a href=\"#\">MAP</a></li>\n          </ol>\n          <a href=\"#mint\" class=\"link\"><span class=\"btn\" >V1 MINT</span></a>\n        </nav>\n        {appContent()}      \n      </div>\n      <footer class=\"footer\">\n        <img src=\"//images.squarespace-cdn.com/content/v1/617ce6e6e7be6e72e51086cc/eba1e465-5a01-4493-8116-a255d434b9fa/CHEFFO+LOGO.png?format=1500w\" alt=\"CHEFFO\" class=\"logo\"/>\n        <h4>Copyright 2021©</h4>\n      </footer>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./styles/reset.css\";\nimport \"./styles/theme.css\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}